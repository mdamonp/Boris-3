#SETUP
'ABORT ANY MOTION AND TURN OFF AMPLIFIER
  AB 1
  WT 10
  MO
  WT 10
'
'DEALLOCATE ALL VARIABLES AND ARRAYS
  DA *,*[0]
'
  DM SOFTVER[4]
  SOFTVER[0]=1
  SOFTVER[1]=3
  SOFTVER[2]=2
  SOFTVER[3]=0
'
'CLEAR ALL RELAVENT BITS
  CB 1;'BIT 1 IS USED TO DISPLAY WHEN THE PENDANT IS ACTIVE
  CB 2;'BIT 1 IS USED TO DISPLAY WHEN THE TRANSLATOR IS READY
  CB 3;'BIT 1 IS USED TO DISPLAY WHEN THE AMP IS ENABLED
'
'MOTOR PARAMETERS
  TRES=81920.0;'GAIN - ENCODER COUNTS/INCHES
  DM ENCDAT[1]
  ENCDAT[0]=TRES
  ACA=10.0*TRES;'DEFAULT ACCEL
  DCA=1000.0*TRES;'DEFAULT DECEL
'
'MOTION PARAMETERS
  TMAXVEL=@RND[1.0*TRES];'MAX VELOCITY IN COUNTS/SEC
  THOMVEL=@RND[0.1*TRES];'HOMING VELOCITY IN COUNTS/SEC
  TJOGVEL=@RND[0.25*TRES];'JOG VELOCITY IN COUNTS/SEC
  TPRKPOS=@RND[0.5*TRES];'PARK POSITION IN COUNTS
  TMINPOS=TPRKPOS;'MIN POSITION IN COUNTS
  TMAXPOS=@RND[5.0*TRES];'MAX POSITION IN COUNTS
'
'APPLICATION PARAMETERS
  LOAD=-999
  MCHSTAT=0;'MACHINE STATE - SEE Galil State Definitions below
  HOMED=0;'HOME STATUS - 0-NOT HOMED OR 1-HOMED
  MAXLOAD=1000;'MAX LOAD IN POUNDS
  LOADGN=1000.0/0.030190;'LOAD GAIN IN POUNDS PER VOLT
  PENDST=0;'PENDANT STATUS - 0-OFF OR 1-ON
  TRANRDY=0;'TRANSLATION READY STATUS - 0-OFF OR 1-ON
  TRANIP=0;'TRANSLATOR IN POSITION - 0-NO OR 1 YES
  OFFLOAD=50;'LOAD LEVEL WHEN SAFE TO MOVE TRANSLATOR OFF OF SUPPORT
  NTRANTL=2.5
  NTRANTK=5.0
  TRANTL=2.5
  TRANTK=5.0
  APOSTTR=0
  AHOME=0
'
'Galil State Definitions
'POWER_OFF                              0
'POWER_ON_NOT_HOMED                     1
'POWER_ON_HOMED                         2
'POWER_ON                               3
'AT_PARK                                4
'MOTION_HALTED                          5
'TRANSLATE_COMPLETE                     6
'TRANSLATE_COMPLETE_WITH_LIMIT_TRIP     7
'SETTING_POWER_STATE                    101
'HOMING                                 102
'MOVING_TO_POSITION                     103
'JOGGING                                104
'TRANSLATING                            105
'PENDANT_ACTIVE                         201
'TRANSLATE_READY                        301
'SYSTEM_ERROR                           -1
'POSITION_FOLLOWING_ERROR               -2
'
'APPLICATION DATA ARRAYS
  DM CMDARG[16];'COMMAND ARGUMENTS
  DM CMDRES[16];'COMMAND REPLY ARGUMENTS
  DM LOCARG[16];'LOCAL COPY OF COMMAND ARGUMENTS
  DM LOCRES[16];'LOCAL COPY OF COMMAND REPLY ARUGMENTS
  DM MCHDAT[3];'MACHINE STATUS
  DM MOTDAT[3];'MOTOR DATA
  DM TRNDAT[5];'TRANSLATION DATA
  DM ERRINFO[3];'SYSTEM ERROR INFORMATION
'
'DEFINE MOTOR DATA ARRAY VALUES
  MOTDAT[0]=TMAXVEL
  MOTDAT[1]=TMINPOS
  MOTDAT[2]=TMAXPOS
'
'SETUP DEFAULT GALIL CONDITIONS
  MT 1
  IT 1
  KP 40
  KI 2
  KD 2
  CE 0
  MT 1
  CN -1
  DP 0
  DE 0
  ER -1
  OE 3
  TK NTRANTK
  TL NTRANTL
  DH 0
  AQ 1,-3;'SETUP ANALOG INPUT 1 FOR DIFFERENTIAL AND -5 <-> 5 VOLT RANGE
  IA 192,168,123,246
'
'SAVE PROGRAM AND SETTINGS
  BP
  BV
  BN
  EN
'
#AUTO
#RESET
  AB 1
  MO
  ZS 0
  INTLOGIC=0
  II 0
  ER -1
  BLA=-2147483648
  FLA=2147483647
  HX 1;'THIS THREAD IS USED FOR MOTION TASKS
  HX 2;'THIS THREAD IS USED FOR FILTERING OF LOAD MEASUREMENTS
  HX 3;'THIS THREAD IS USED FOR BLINKING THE TRANSLATOR READY LED
  HX 4
  HX 5
  HX 6
  HX 7
  CB 1
  CB 2
  CB 3
  HOMED=0
  LOAD=-999
  MCHSTAT=0;'POWER OFF
  PENDST=0
  TRANRDY=0
  TRANIP=0
  LASTST=0
  CMDPEND=0
  CMDSTAT=0
  ARGCNT=0
  RESCNT=0
  CMDID=0
  ARGSZ=16
  COUNT=0
  ERRINFO[0]=0
  ERRINFO[1]=0
  ERRINFO[2]=-1
  MCHDAT[0]=MCHSTAT;'MACHINE STATE
  MCHDAT[1]=0
  MCHDAT[2]=0
  IF (AHOME=1)
    SB 3
    SH
    WT 10
    XQ #HOME,1;'MOVE TO HOME
#INIT1
    WT 10
    JP #INIT1, _XQ1>0
    MO
    CB 3
  ENDIF
  MCHSTAT=0;'POWER OFF
  INTLOGIC=0
  IF (@IN[5]=0)
    INTLOGIC=INTLOGIC | $10
    IF (HOMED=1)
      MCHSTAT=3
    ELSE
      MCHSTAT=1
    ENDIF
    SB 3
    SH
  ENDIF
  IF (@IN[3]=0)
    INTLOGIC=INTLOGIC | $04
    IF (MCHSTAT>0)
      MCHSTAT=201
    ENDIF
    SB 1
    PENDST=1
  ENDIF
  MCHDAT[0]=MCHSTAT;'MACHINE STATE
  WT 10
  XQ #FILTER,2;'START LOAD FILTER TASK
  II 1,8,,INTLOGIC
#INIT2
  CMDARG[COUNT]=0
  CMDRES[COUNT]=0
  LOCARG[COUNT]=0
  LOCRES[COUNT]=0
  COUNT=COUNT+1
  JP #INIT2,COUNT<ARGSZ
  XQ #CONNECT,4;
#INIT3
  WT 10
  JP #INIT3, _XQ4>0
'
#CMDPR
  MCHDAT[0]=MCHSTAT;'MACHINE STATE
  MCHDAT[1]=_TPA/TRES;'ABSOLUTE POSITION IN INCHES
  MCHDAT[2]=LOAD;'LOAD CELL VALUE IN POUNDS
  IF (CMDPEND=1)
    CMDID=CMDARG[0]
    ARGCNT=CMDARG[1]
    IF (ARGCNT>0)
      COUNT=0
      INDEX=2
#CMDPR1
      LOCARG[COUNT]=CMDARG[INDEX]
      COUNT=COUNT+1
      INDEX=INDEX+1
      JP #CMDPR1,COUNT<ARGCNT
#CMDPR2
      LOCARG[COUNT]=0
      COUNT=COUNT+1
      JP #CMDPR2,COUNT<ARGSZ
    ENDIF
    IF (CMDID=1);'TRANSLATE COMMAND USING FIXED MOVE DISTANCE
      JS #FC1
      JP #CMDPR4
    ENDIF
    IF (CMDID=2);'TRANSLATE COMMAND USING LOAD LIMIT BASED MOVE
      JS #FC2
      JP #CMDPR4
    ENDIF
    RESCNT=0
    CMDSTAT=-4
    JS #CMDRPY
    CMDPEND=0
#CMDPR4
    CMDPEND=2
  ELSE
    WT 10
  ENDIF
  JP #CMDPR
  EN
#CMDRPY
  CMDRES[0]=CMDID
  CMDRES[1]=CMDSTAT
  CMDRES[2]=RESCNT
  IF (RESCNT>0)
    COUNT=0
    INDEX=3
#CMDRPY1
    CMDRES[INDEX]=LOCRES[COUNT]
    INDEX=INDEX+1
    COUNT=COUNT+1
    JP #CMDRPY1,COUNT<RESCNT
#CMDRPY2
    CMDRES[INDEX]=0
    INDEX=INDEX+1
    JP #CMDRPY2,INDEX<ARGSZ
  ENDIF
  EN
#CMDERR
  AB1
  MO
  HX 1
  HX 2
  HX 3
  HX 4
  CB 1
  CB 2
  CB 3
  LOAD=-999
  ERRINFO[0]=_TC
  ERRINFO[1]=_ED
  ERRINFO[2]=_ED1
  MCHSTAT=-1
  INTLOGIC=0
  II 0
  IF (CMDPEND<>0)
    RESCNT=0
    CMDSTAT=-8
    JS #CMDRPY
    CMDPEND=0
  ENDIF
  IF ((_TC>=120)&(_TC<=129));
   JS #connect
   IF fail
     MG "Connection to ",192{F3.0},168,123,247," Failed"
     MG "Stopping Program"
   ENDIF
  ENDIF
  JP #CMDPR
  EN
'
#FC1
  RESCNT=0
  IF (_XQ1<>-1)
    MERRCMD=CMDID
    CMDSTAT=-5
    JS #CMDRPY
    EN
  ENDIF
  IF (MCHSTAT<2)
    MERRCMD=CMDID
    CMDSTAT=-2
    JS #CMDRPY
    EN
  ENDIF
  IF (ARGCNT<>4)
    CMDSTAT=-7
    JS #CMDRPY
    EN
  ENDIF
  TRNDAT[0]=LOCARG[0]*TRES;'CONVERT TO COUNTS/SEC
  TRNDAT[1]=LOCARG[1]*TRES;'CONVERT TO COUNTS
  TRNDAT[2]=LOCARG[2]
  TRNDAT[3]=LOCARG[3]+8001;
  IF ((TRNDAT[0]<1)|(TRNDAT[0]>TMAXVEL))
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  IF ((TRNDAT[1]<1)|(TRNDAT[1]>TMAXPOS))
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  IF (TRNDAT[2]>MAXLOAD)
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  ENDPT=_TPA+TRNDAT[1]
  IF (ENDPT>TMAXPOS)
    CMDSTAT=-10
    JS #CMDRPY
    EN
  ENDIF
  LASTST=MCHSTAT
  MCHSTAT=105
  XQ #TRANSA,1
  WT 10
  CMDSTAT=0
  JS #CMDRPY
  EN
'
#FC2
  RESCNT=0
  IF (_XQ1<>-1)
    MERRCMD=CMDID
    CMDSTAT=-5
    JS #CMDRPY
    EN
  ENDIF
  IF (MCHSTAT<2)
    MERRCMD=CMDID
    CMDSTAT=-2
    JS #CMDRPY
    EN
  ENDIF
  IF (ARGCNT<>4)
    CMDSTAT=-7
    JS #CMDRPY
    EN
  ENDIF
  TRNDAT[0]=LOCARG[0]*TRES;'CONVERT TO COUNTS/SEC
  TRNDAT[1]=LOCARG[1]*TRES;'CONVERT TO COUNTS
  TRNDAT[2]=LOCARG[2]
  TRNDAT[3]=LOCARG[3]+8001;
  IF ((TRNDAT[0]<1)|(TRNDAT[0]>TMAXVEL))
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  IF ((TRNDAT[1]<1)|(TRNDAT[1]>TMAXPOS))
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  IF (TRNDAT[2]>MAXLOAD)
    CMDSTAT=-3
    JS #CMDRPY
    EN
  ENDIF
  ENDPT=_TPA+TRNDAT[1]
  IF (ENDPT>TMAXPOS)
    CMDSTAT=-10
    JS #CMDRPY
    EN
  ENDIF
  LASTST=MCHSTAT
  MCHSTAT=105
  XQ #TRANSB,1
  WT 10
  CMDSTAT=0
  JS #CMDRPY
  EN
'
#HOME
  LASTST=MCHSTAT
  MCHSTAT=102
  TK NTRANTK
  TL NTRANTL
  IF (HOMED=1)
    HOMED=0
    SP TJOGVEL
    PAA=TPRKPOS
    BGA
    AMA
  ENDIF
  HOMED=0
  BLA=-2147483648
  FLA=2147483647
  WT 10
  SPA=THOMVEL
  FEA
  BGA
  AMA
  WT 10
  DPA=0
  DEA=0
  WT 10
  SPA=TJOGVEL
  PAA=TPRKPOS
  BGA
  AMA
  WT 10
  BLA=TMINPOS
  FLA=TMAXPOS
  HOMED=1
  LASTST=MCHSTAT
  MCHSTAT=4
  EN
'
#PARK
  TK NTRANTK
  TL NTRANTL
  SPA=TJOGVEL
  PAA=TPRKPOS
  BGA
  AMA
  WT 10
  MCHSTAT=4
  EN
'
#TRANSA
  TK TRANTK
  TL TRANTL
  SPA=TRNDAT[0]
  PRA=TRNDAT[1]
  BGA
  IF(TRNDAT[2]<=0);'LOAD LIMIT CHECK - <=0 NO LOAD CHECK
    AMA
    WT 10
    JS #SUPPORT
    WT 10
    MCHSTAT=6
    TK NTRANTK
    TL NTRANTL
  ELSE
#TRANSA1
    IF (_SCA=0)
      IF (LOAD>TRNDAT[2])
        STA
        AMA
        WT 10
        JS #SUPPORT
        WT 10
        MCHSTAT=7
      ELSE
        WT 10
        JP #TRANSA1
      ENDIF
    ELSE
      AMA
      WT 10
      JS #SUPPORT
      WT 10
      MCHSTAT=6
    ENDIF
  ENDIF
  EN
'
#TRANSB
  TK TRANTK
  TL TRANTL
  SPA=TRNDAT[0]
  PRA=TRNDAT[1]
  BGA
  WT 10
#TRANSB1
  IF (_SCA=0)
    IF (LOAD>TRNDAT[2])
      STA
      AMA
      WT 10
    JS #SUPPORT
    WT 10
      MCHSTAT=6
      EN
    ENDIF
    IF (_TPA>=TRNDAT[1])
      STA
      AMA
      WT 10
    JS #SUPPORT
    WT 10
      MCHSTAT=7
      EN
    ENDIF
    WT 10
    JP #TRANSB1
  ENDIF
  EN
'
#ININT
  WT 10;'DEBOUNCE
  IF (@IN[1]=0)
    INTTRIG=INTLOGIC & $01
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $01
      II 1,8,,INTLOGIC
      IF ((PENDST>0)&(TRANIP=0))
        STA
        AMA
        XQ #JOGUP, 1
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
  IF (@IN[1]=1)
    INTTRIG=INTLOGIC & $01
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $FE
      II 1,8,,INTLOGIC
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[2]=0)
    INTTRIG=INTLOGIC & $02
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $02
      II 1,8,,INTLOGIC
      IF (PENDST>0)
        STA
        AMA
        XQ #JOGDWN, 1
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
  IF (@IN[2]=1)
    INTTRIG=INTLOGIC & $02
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $FD
      II 1,8,,INTLOGIC
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[3]=0)
    INTTRIG=INTLOGIC & $04
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $04
      II 1,8,,INTLOGIC
      IF (((MCHSTAT>0) & (MCHSTAT<100)) | (MCHSTAT=301))
        LASTST=MCHSTAT
        MCHSTAT=201
        TRANIP=0
        TRANRDY=0
        SB 1
        CB 2
        PENDST=1
        JP #CMDPR
      ENDIF
    ENDIF
  ENDIF
  IF (@IN[3]=1)
    INTTRIG=INTLOGIC & $04
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $FB
      II 1,8,,INTLOGIC
      LASTST=MCHSTAT
      IF (HOMED=1)
        MCHSTAT=3
      ELSE
        MCHSTAT=1
      ENDIF
      STA
      AMA
      TRANIP=0
      TRANRDY=0
      CB 1
      CB 2
      PENDST=0
      JP #CMDPR
      ENDIF
    ENDIF
  ENDIF
'
  IF (@IN[4]=0)
    INTTRIG=INTLOGIC & $08
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $08
      II 1,8,,INTLOGIC
      IF ((MCHSTAT>=3) & (MCHSTAT<100) & (PENDST=0))
        IF (LOAD<OFFLOAD)
          IF (TRANIP=1)
            XQ #POSTRAN,1
          ELSE
            IF (_XQ1=-1)
              IF (APOSTTR=1)
                XQ #PRETRAN,1
              ELSE
                STA
                AMA
                LASTST=MCHSTAT
                MCHSTAT=301
                TRANIP=1
                TRANRDY=1
                SB3
              ENDIF
            ENDIF
          ENDIF
          JP #CMDPR
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  IF (@IN[4]=1)
    INTTRIG=INTLOGIC & $08
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $F7
      II 1,8,,INTLOGIC
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[5]=0)
    INTTRIG=INTLOGIC & $10
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $10
      II 1,8,,INTLOGIC
      IF (MCHSTAT=0)
        LASTST=MCHSTAT
        IF (HOMED=1)
          MCHSTAT=3
        ELSE
          MCHSTAT=1
        ENDIF
        SB 3
        CB 2
        SH
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
  IF (@IN[5]=1)
    INTTRIG=INTLOGIC & $10
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $EF
      II 1,8,,INTLOGIC
      LASTST=MCHSTAT
      MCHSTAT=0
      CB3
      STA
      AMA
      MO
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[6]=0)
    INTTRIG=INTLOGIC & $20
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $20
      II 1,8,,INTLOGIC
      IF ((MCHSTAT=103) | (MCHSTAT=104))
        HX1
        STA
        AMA
        LASTST=MCHSTAT
        MCHSTAT=301
        TRANIP=1
        TRANRDY=1
        HX3
        SB3
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
  IF (@IN[6]=1)
    INTTRIG=INTLOGIC & $20
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $DF
      II 1,8,,INTLOGIC
      TRANIP=0
      IF (MCHSTAT=301)
        LASTST=MCHSTAT
        MCHSTAT=3
        CB2
        TRANIP=0
        TRANRDY=0
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[7]=0)
    INTTRIG=INTLOGIC & $40
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $40
      II 1,8,,INTLOGIC
      IF (MCHSTAT>0)
        HX1
        STA
        AMA
        TRANRDY=0
        TRANIP=0
        CB 2
        LASTST=MCHSTAT
        IF (HOMED=1)
          MCHSTAT=3
        ELSE
          MCHSTAT=1
        ENDIF
        JP #CMDPR
      ENDIF
    ENDIF
  ENDIF
  IF (@IN[7]=1)
    INTTRIG=INTLOGIC & $40
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $BF
      II 1,8,,INTLOGIC
      JP #CMDPR
    ENDIF
  ENDIF
'
  IF (@IN[8]=0)
    INTTRIG=INTLOGIC & $80
    IF (INTTRIG=0)
      ZS
      INTLOGIC=INTLOGIC | $80
      II 1,8,,INTLOGIC
      IF ((HOMED=0) & (MCHSTAT=1))
        STA
        AMA
        XQ #HOME, 1
      ENDIF
      JP #CMDPR
    ENDIF
  ENDIF
  IF (@IN[8]=1)
    INTTRIG=INTLOGIC & $80
    IF (INTTRIG>0)
      ZS
      INTLOGIC=INTLOGIC & $7F
      II 1,8,,INTLOGIC
      JP #CMDPR
    ENDIF
  ENDIF
'
  RI 1
'
#JOGUP
  LASTST=MCHSTAT
  MCHSTAT=104
  TK NTRANTK
  TL NTRANTL
  JGA=TJOGVEL
  BGA
  AI 1
  STA
  AMA
  LASTST=MCHSTAT
  MCHSTAT=201
  EN
'
#JOGDWN
  LASTST=MCHSTAT
  MCHSTAT=104
  TK NTRANTK
  TL NTRANTL
  JGA=-TJOGVEL
  BGA
  AI 2
  STA
  AMA
  LASTST=MCHSTAT
  MCHSTAT=201
  EN
'
#PRETRAN
  LASTST=MCHSTAT
  MCHSTAT=103
  XQ #BLINK, 3
  TK NTRANTK
  TL NTRANTL
  PAA=TMAXPOS
  SPA=TJOGVEL
  BGA
  AMA
  LASTST=MCHSTAT
  MCHSTAT=-4
  TRANIP=0
  TRANRDY=0
  HX3
  CB2
  IF (CMDPEND<>0)
    RESCNT=0
    CMDSTAT=-8
    JS #CMDRPY
    CMDPEND=0
  ENDIF
  JP #CMDPR
  EN
'
#POSTRAN
  LASTST=MCHSTAT
  MCHSTAT=104
  XQ #BLINK, 3
  TK NTRANTK
  TL NTRANTL
  PAA=TPRKPOS
  SPA=TJOGVEL
  BGA
  AMA
  TRANIP=0
  TRANRDY=0
  LASTST=MCHSTAT
  MCHSTAT=4
  HX3
  CB2
  EN
'
#POSERR
  AB1
  MO
  TK NTRANTK
  TL NTRANTL
  INTLOGIC=0
  II 0
  HX 1
  CB 1
  CB 2
  CB 3
  LASTST=MCHSTAT
  MCHSTAT=-2
  IF (CMDPEND<>0)
    RESCNT=0
    CMDSTAT=-8
    JS #CMDRPY
    CMDPEND=0
  ENDIF
  JP #CMDPR
  EN
'
#FILTER
'Single poll filter
'k1+k2 = 1 - use division with m div 2^n ratio
'FLEVEL 0<->63 WITH FLEVEL=0 - NO FILTERING OR FLEVEL=63 MAX FILTERING
  FLEVEL=60
  k1=(64-FLEVEL)/64
  k2=FLEVEL/64
  AT0;'set initial time reference
  AN1=*@AN[1];'set filter seed
  LOAD=@ABS[AN1*LOADGN]
  AT-10,0
#FILTER1
  AN1=(k1*@AN[1])+(k2*AN1)
  LOAD=@ABS[AN1*LOADGN]
  AT-10,0
  JP#FILTER1
  EN
'
#BLINK
  IF (@OUT[3]=0)
    SB 2
  ELSE
    CB 2
  ENDIF
  WT250
  JP #BLINK
  EN
'
#SUPPORT
  SB TRNDAT[3]
#BUTTON
  WT 10;
  JP #BUTTON,(@IN[TRNDAT[3]] = 1); '****ADD LOAD CHECK TO THIS LINE***
  CB TRNDAT[3]
  EN
'
#TCPERR
MG "TCPERR, Reconnecting to RIO - error code",_TC1
JS #connect
IF fail
 MG "Connection to "192{F3.0},168,123,247," Failed"
 MCHSTAT = -1
ENDIF
RE
'
#CONNECT
#close
  IHH= -2
  WT 100
  JP #close,_IHH2<>0
  i= 0;fail= 0;
#con
  IHH= 192,168,123,247<502>2
#wtih;WT 10;JP #wtih,_IHH2=-6
  i= i+1
  IF ((i=5)&(_IHH2=0))
    fail= 1
    MG "Failed Connection to ",192{F3.0},168,123,247
    TH
  ENDIF
  JP #con,((_IHH2=0)&(fail=0))
  MW 1;
  EN
